{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_usdtToken",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokensForSale",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_openingTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_closingTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokensSold",
          "type": "uint256"
        }
      ],
      "name": "ICOEnded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensPurchased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "buyTokensWithEther",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "buyTokensWithUSDT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "closingTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endICO",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRemainingTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "openingTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokensForSale",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokensSold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdtToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xabe7c98ad703b3160a68546339cdf5b38e54d0ad5669c1cb10617ee7041b7a86",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1556591",
    "logsBloom": "0x
    "blockHash": "0x978f30cadc93efe24106ace98547fbb9ae2a8fc5a2d9b4800f9b493ed1b0c173",
    "transactionHash": "0xabe7c98ad703b3160a68546339cdf5b38e54d0ad5669c1cb10617ee7041b7a86",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1556591",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xce6DF69E893ec894c0F60522ebD4e349AAc5F8C6",
    "0xdCdC73413C6136c9ABcC3E8d250af42947aC2Fc7",
    "0x70997970C51812dc3A010C7d01b50e0d17dc79C8",
    1,
    1000000,
    1713175706,
    1713262346,
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "69bd9637cd3635b32884f551309ef30f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdtToken\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokensForSale\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_openingTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_closingTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensSold\",\"type\":\"uint256\"}],\"name\":\"ICOEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"buyTokensWithEther\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"buyTokensWithUSDT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endICO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRemainingTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensForSale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensSold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdtToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ICO.sol\":\"ICO\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/ICO.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.24;\\n\\n// Import OpenZeppelin libraries for ERC20 token, math operations, and ERC20 interfaces\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\ncontract ICO {\\n    // Token details\\n    ERC20 public token;\\n\\n    //Owner Details\\n    address payable public owner;\\n\\n    // USDT token details\\n    IERC20 public usdtToken;\\n\\n    // ICO parameters\\n\\n    uint256 public tokenPrice;\\n    uint256 public tokensForSale;\\n    uint256 public tokensSold;\\n    uint256 public openingTime;\\n    uint256 public closingTime;\\n\\n    //Aggregator parameters\\n    AggregatorV3Interface public priceFeed;\\n\\n    // Events\\n    event TokensPurchased(address indexed purchaser, uint256 amount);\\n    event ICOEnded(uint256 tokensSold);\\n    event Withdrawal(address indexed owner, uint256 amount);\\n\\n    constructor(\\n        address _token,\\n        address _usdtToken,\\n        address payable _owner,\\n        uint256 _tokenPrice,\\n        uint256 _tokensForSale,\\n        uint256 _openingTime,\\n        uint256 _closingTime,\\n        address _priceFeedAddress\\n    ) {\\n        token = ERC20(_token);\\n        usdtToken = IERC20(_usdtToken);\\n        owner = _owner;\\n        tokenPrice = _tokenPrice;\\n        tokensForSale = _tokensForSale;\\n        openingTime = _openingTime;\\n        closingTime = _closingTime;\\n        priceFeed = AggregatorV3Interface(_priceFeedAddress);\\n    }\\n\\n    modifier onlyWhileOpen() {\\n        require(\\n            block.timestamp >= openingTime && block.timestamp <= closingTime,\\n            \\\"ICO: not open\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"ICO: caller is not the token owner\\\");\\n        _;\\n    }\\n\\n    function getPrice() internal view returns (uint256) {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    function getTokensToBuy(uint256 ethAmount) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice();\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        uint256 tokensToBuy = ethAmountInUsd / tokenPrice;\\n        // the actual ETH/USD conversation rate, after adjusting the extra 0s.\\n        return tokensToBuy;\\n    }\\n\\n    // Function to buy tokens using Ether\\n    function buyTokensWithEther() external payable onlyWhileOpen {\\n        uint256 weiAmount = msg.value;\\n        require(weiAmount > 0, \\\"ICO: amount must be greater than zero\\\");\\n\\n        uint256 tokensToBuy = getTokensToBuy(weiAmount);\\n        require(\\n            tokensToBuy <= tokensForSale - tokensSold,\\n            \\\"ICO: not enough tokens left for sale\\\"\\n        );\\n\\n        tokensSold = tokensSold + tokensToBuy;\\n\\n        // Attempt to transfer tokens to the buyer\\n        bool transferSuccess = token.transfer(msg.sender, tokensToBuy);\\n        require(transferSuccess, \\\"Token transfer failed\\\");\\n\\n        emit TokensPurchased(msg.sender, tokensToBuy);\\n    }\\n\\n    // Function to buy tokens using USDT\\n    function buyTokensWithUSDT(uint256 _amount) external onlyWhileOpen {\\n        require(_amount > 0, \\\"ICO: amount must be greater than zero\\\");\\n\\n        uint256 usdtAmount = _amount * tokenPrice;\\n        require(\\n            usdtToken.transferFrom(msg.sender, owner, usdtAmount),\\n            \\\"USDT transfer failed\\\"\\n        );\\n\\n        require(\\n            usdtAmount <= (tokensForSale - tokensSold) * tokenPrice,\\n            \\\"ICO: not enough tokens left for sale\\\"\\n        );\\n\\n        tokensSold = tokensSold + _amount;\\n\\n        bool transferSuccess = token.transfer(msg.sender, _amount);\\n        require(transferSuccess, \\\"Token transfer failed\\\");\\n\\n        emit TokensPurchased(msg.sender, _amount);\\n    }\\n\\n    // Function to withdraw accumulated Ether\\n    function withdrawEther() external onlyOwner {\\n        uint256 balance = address(this).balance;\\n        require(balance > 0, \\\"ICO: no Ether to withdraw\\\");\\n\\n        owner.transfer(balance);\\n        emit Withdrawal(owner, balance);\\n    }\\n\\n    function endICO() external onlyOwner {\\n        require(block.timestamp > closingTime, \\\"ICO: ICO is still ongoing\\\");\\n\\n        uint256 remainingTokens = tokensForSale - tokensSold;\\n        if (remainingTokens > 0) {\\n            token.transfer(owner, remainingTokens);\\n        }\\n\\n        emit ICOEnded(tokensSold);\\n    }\\n\\n    function getRemainingTokens() public view returns (uint256) {\\n        return tokensForSale - tokensSold;\\n    }\\n}\\n\",\"keccak256\":\"0x0ad8d4ec34dbedac0612e48e4f1b8d08566082b8d7e0882b6508a596462d9d5a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001afe38038062001afe83398181016040528101906200003791906200024e565b876000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555086600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508460038190555083600481905550826006819055508160078190555080600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050505050505062000317565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001968262000169565b9050919050565b620001a88162000189565b8114620001b457600080fd5b50565b600081519050620001c8816200019d565b92915050565b6000620001db8262000169565b9050919050565b620001ed81620001ce565b8114620001f957600080fd5b50565b6000815190506200020d81620001e2565b92915050565b6000819050919050565b620002288162000213565b81146200023457600080fd5b50565b60008151905062000248816200021d565b92915050565b600080600080600080600080610100898b03121562000272576200027162000164565b5b6000620002828b828c01620001b7565b9850506020620002958b828c01620001b7565b9750506040620002a88b828c01620001fc565b9650506060620002bb8b828c0162000237565b9550506080620002ce8b828c0162000237565b94505060a0620002e18b828c0162000237565b93505060c0620002f48b828c0162000237565b92505060e0620003078b828c01620001b7565b9150509295985092959890939650565b6117d780620003276000396000f3fe6080604052600436106100dd5760003560e01c80637ff9b5961161007f578063af35ae2711610059578063af35ae2714610266578063b7a8807c14610291578063cd38ba95146102bc578063fc0c546a146102c6576100dd565b80637ff9b596146101e55780638da5cb5b14610210578063a98ad46c1461023b576100dd565b8063518ab2a8116100bb578063518ab2a81461014f5780635ef8086f1461017a5780637362377b146101a3578063741bef1a146101ba576100dd565b806312aef8c3146100e25780634b6753bc1461010d5780634f24840914610138575b600080fd5b3480156100ee57600080fd5b506100f76102f1565b6040516101049190610e0e565b60405180910390f35b34801561011957600080fd5b506101226102f7565b60405161012f9190610e0e565b60405180910390f35b34801561014457600080fd5b5061014d6102fd565b005b34801561015b57600080fd5b506101646104ec565b6040516101719190610e0e565b60405180910390f35b34801561018657600080fd5b506101a1600480360381019061019c9190610e5a565b6104f2565b005b3480156101af57600080fd5b506101b8610846565b005b3480156101c657600080fd5b506101cf6109fa565b6040516101dc9190610f06565b60405180910390f35b3480156101f157600080fd5b506101fa610a20565b6040516102079190610e0e565b60405180910390f35b34801561021c57600080fd5b50610225610a26565b6040516102329190610f42565b60405180910390f35b34801561024757600080fd5b50610250610a4c565b60405161025d9190610f7e565b60405180910390f35b34801561027257600080fd5b5061027b610a72565b6040516102889190610e0e565b60405180910390f35b34801561029d57600080fd5b506102a6610a89565b6040516102b39190610e0e565b60405180910390f35b6102c4610a8f565b005b3480156102d257600080fd5b506102db610cd3565b6040516102e89190610fba565b60405180910390f35b60045481565b60075481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461038d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038490611058565b60405180910390fd5b60075442116103d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c8906110c4565b60405180910390fd5b60006005546004546103e39190611113565b905060008111156104b05760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b815260040161046b929190611168565b6020604051808303816000875af115801561048a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ae91906111c9565b505b7fbbf40e708b73b2d2689ef2694587d8e2ed884907ff46892bd20cc8098d3fb2fa6005546040516104e19190610e0e565b60405180910390a150565b60055481565b600654421015801561050657506007544211155b610545576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053c90611242565b60405180910390fd5b60008111610588576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057f906112d4565b60405180910390fd5b60006003548261059891906112f4565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518463ffffffff1660e01b815260040161061b93929190611357565b6020604051808303816000875af115801561063a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065e91906111c9565b61069d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610694906113da565b60405180910390fd5b6003546005546004546106b09190611113565b6106ba91906112f4565b8111156106fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f39061146c565b60405180910390fd5b8160055461070a919061148c565b60058190555060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b815260040161076e9291906114c0565b6020604051808303816000875af115801561078d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b191906111c9565b9050806107f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ea90611535565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f8f28852646c20cc973d3a8218f7eefed58c25c909f78f0265af4818c3d4dc271846040516108399190610e0e565b60405180910390a2505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108cd90611058565b60405180910390fd5b60004790506000811161091e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610915906115a1565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610986573d6000803e3d6000fd5b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65826040516109ef9190610e0e565b60405180910390a250565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600554600454610a849190611113565b905090565b60065481565b6006544210158015610aa357506007544211155b610ae2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad990611242565b60405180910390fd5b600034905060008111610b2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b21906112d4565b60405180910390fd5b6000610b3582610cf7565b9050600554600454610b479190611113565b811115610b89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b809061146c565b60405180910390fd5b80600554610b97919061148c565b60058190555060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610bfb9291906114c0565b6020604051808303816000875af1158015610c1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3e91906111c9565b905080610c80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7790611535565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f8f28852646c20cc973d3a8218f7eefed58c25c909f78f0265af4818c3d4dc27183604051610cc69190610e0e565b60405180910390a2505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080610d02610d44565b90506000670de0b6b3a76400008483610d1b91906112f4565b610d2591906115f0565b9050600060035482610d3791906115f0565b9050809350505050919050565b600080600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610db4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd891906116ae565b5050509150506402540be40081610def9190611729565b91505090565b6000819050919050565b610e0881610df5565b82525050565b6000602082019050610e236000830184610dff565b92915050565b600080fd5b610e3781610df5565b8114610e4257600080fd5b50565b600081359050610e5481610e2e565b92915050565b600060208284031215610e7057610e6f610e29565b5b6000610e7e84828501610e45565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610ecc610ec7610ec284610e87565b610ea7565b610e87565b9050919050565b6000610ede82610eb1565b9050919050565b6000610ef082610ed3565b9050919050565b610f0081610ee5565b82525050565b6000602082019050610f1b6000830184610ef7565b92915050565b6000610f2c82610e87565b9050919050565b610f3c81610f21565b82525050565b6000602082019050610f576000830184610f33565b92915050565b6000610f6882610ed3565b9050919050565b610f7881610f5d565b82525050565b6000602082019050610f936000830184610f6f565b92915050565b6000610fa482610ed3565b9050919050565b610fb481610f99565b82525050565b6000602082019050610fcf6000830184610fab565b92915050565b600082825260208201905092915050565b7f49434f3a2063616c6c6572206973206e6f742074686520746f6b656e206f776e60008201527f6572000000000000000000000000000000000000000000000000000000000000602082015250565b6000611042602283610fd5565b915061104d82610fe6565b604082019050919050565b6000602082019050818103600083015261107181611035565b9050919050565b7f49434f3a2049434f206973207374696c6c206f6e676f696e6700000000000000600082015250565b60006110ae601983610fd5565b91506110b982611078565b602082019050919050565b600060208201905081810360008301526110dd816110a1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061111e82610df5565b915061112983610df5565b9250828203905081811115611141576111406110e4565b5b92915050565b600061115282610ed3565b9050919050565b61116281611147565b82525050565b600060408201905061117d6000830185611159565b61118a6020830184610dff565b9392505050565b60008115159050919050565b6111a681611191565b81146111b157600080fd5b50565b6000815190506111c38161119d565b92915050565b6000602082840312156111df576111de610e29565b5b60006111ed848285016111b4565b91505092915050565b7f49434f3a206e6f74206f70656e00000000000000000000000000000000000000600082015250565b600061122c600d83610fd5565b9150611237826111f6565b602082019050919050565b6000602082019050818103600083015261125b8161121f565b9050919050565b7f49434f3a20616d6f756e74206d7573742062652067726561746572207468616e60008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006112be602583610fd5565b91506112c982611262565b604082019050919050565b600060208201905081810360008301526112ed816112b1565b9050919050565b60006112ff82610df5565b915061130a83610df5565b925082820261131881610df5565b9150828204841483151761132f5761132e6110e4565b5b5092915050565b600061134182610e87565b9050919050565b61135181611336565b82525050565b600060608201905061136c6000830186611348565b6113796020830185611159565b6113866040830184610dff565b949350505050565b7f55534454207472616e73666572206661696c6564000000000000000000000000600082015250565b60006113c4601483610fd5565b91506113cf8261138e565b602082019050919050565b600060208201905081810360008301526113f3816113b7565b9050919050565b7f49434f3a206e6f7420656e6f75676820746f6b656e73206c65667420666f722060008201527f73616c6500000000000000000000000000000000000000000000000000000000602082015250565b6000611456602483610fd5565b9150611461826113fa565b604082019050919050565b6000602082019050818103600083015261148581611449565b9050919050565b600061149782610df5565b91506114a283610df5565b92508282019050808211156114ba576114b96110e4565b5b92915050565b60006040820190506114d56000830185611348565b6114e26020830184610dff565b9392505050565b7f546f6b656e207472616e73666572206661696c65640000000000000000000000600082015250565b600061151f601583610fd5565b915061152a826114e9565b602082019050919050565b6000602082019050818103600083015261154e81611512565b9050919050565b7f49434f3a206e6f20457468657220746f20776974686472617700000000000000600082015250565b600061158b601983610fd5565b915061159682611555565b602082019050919050565b600060208201905081810360008301526115ba8161157e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006115fb82610df5565b915061160683610df5565b925082611616576116156115c1565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b61164081611621565b811461164b57600080fd5b50565b60008151905061165d81611637565b92915050565b6000819050919050565b61167681611663565b811461168157600080fd5b50565b6000815190506116938161166d565b92915050565b6000815190506116a881610e2e565b92915050565b600080600080600060a086880312156116ca576116c9610e29565b5b60006116d88882890161164e565b95505060206116e988828901611684565b94505060406116fa88828901611699565b935050606061170b88828901611699565b925050608061171c8882890161164e565b9150509295509295909350565b600061173482611663565b915061173f83611663565b925082820261174d81611663565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615611785576117846110e4565b5b828205841483151761179a576117996110e4565b5b509291505056fea2646970667358221220623b781dce771f6156c14f11463b16d96545e4e09827c6e3eebcd04dce1803d264736f6c63430008180033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 839,
        "contract": "contracts/ICO.sol:ICO",
        "label": "token",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(ERC20)697"
      },
      {
        "astId": 841,
        "contract": "contracts/ICO.sol:ICO",
        "label": "owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address_payable"
      },
      {
        "astId": 844,
        "contract": "contracts/ICO.sol:ICO",
        "label": "usdtToken",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IERC20)775"
      },
      {
        "astId": 846,
        "contract": "contracts/ICO.sol:ICO",
        "label": "tokenPrice",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 848,
        "contract": "contracts/ICO.sol:ICO",
        "label": "tokensForSale",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 850,
        "contract": "contracts/ICO.sol:ICO",
        "label": "tokensSold",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 852,
        "contract": "contracts/ICO.sol:ICO",
        "label": "openingTime",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 854,
        "contract": "contracts/ICO.sol:ICO",
        "label": "closingTime",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 857,
        "contract": "contracts/ICO.sol:ICO",
        "label": "priceFeed",
        "offset": 0,
        "slot": "8",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_contract(ERC20)697": {
        "encoding": "inplace",
        "label": "contract ERC20",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)775": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}